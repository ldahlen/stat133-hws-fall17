}
summation_k
# Series 1
n <- c(seq(from = 0, by = 1, to = 20))
summation_k <- rep(n)  #HELP
for(i in c(1:20)) {
print(fractions(1/(2^n[i])))
}
# Series 2
n <- c(seq(from = 0, by = 1, to = 20))
summation_k <- rep(n)  #HELP
for(i in c(1:20)) {
print(fractions(1/(9^n[i])))
}
# Series 1
n <- c(seq(from = 0, by = 1, to = 20))
summation_k <- rep(length(n))  #HELP
for(i in c(1:20)) {
print(fractions(1/(2^n[i])))
}
# Series 2
n <- c(seq(from = 0, by = 1, to = 20))
summation_k <- rep(length(n))  #HELP
for(i in c(1:20)) {
print(fractions(1/(9^n[i])))
}
summation_k
# Series 1
n <- c(seq(from = 0, by = 1, to = 20))
summation_k <- rep(length(n))  #HELP
for(i in c(1:20)) {
print(fractions(1/(2^n[i])))
}
# Series 2
n <- c(seq(from = 0, by = 1, to = 20))
summation2_k <- rep(length(n))  #HELP
for(i in c(1:20)) {
print(fractions(1/(9^n[i])))
}
vec2
n <- c(seq(from = 0, by = 1, to = 20))
d <- 3
a1 <- 3
for(i in c(1:20)) {
print(a1+(n-1)*d)
}
letters
LETTERS
n <- c(seq(from = 0, by = 1, to = 20))
d <- 3
a1 <- 3
for(i in c(1:20)) {
print(a1+(n-1)*d)
break
}
n <- c(seq(from = 0, by = 1, to = 20))
r <- ratio
n <- c(seq(from = 0, by = 1, to = 20))
r <- ((n+1)/n)
a1 <- 3
for(i in c(1:20)) {
print(a1*r^(n-1))
break
}
# Sine Approximation
n <- c(seq(from = 0, by = 1, to = 20))
x <- length(n)
for(i in c(1)) {
print(x -((x^3)/(1+2+3)) + ((x^5)/(1+2+3+4+5))) - ((x^7)/(1+2+3+4+5+6+7)))
# Sine Approximation
n <- c(seq(from = 0, by = 1, to = 20))
x <- length(n)
for(i in c(1)) {
print(x -((x^3)/(1+2+3)) + ((x^5)/(1+2+3+4+5))) - ((x^7)/(1+2+3+4+5+6+7))
}
x
sin(21)
f <- c(seq(from 3, to = 100, by 2))
f <- c(seq(from = 3, to = 100, by 2))
f <- c(seq(from = 3, to = 100, by = 2))
f
# Sine Approximation
n <- c(seq(from = 0, by = 1, to = 20))
f <- c(seq(from = 3, to = 100, by = 2))
x <- length(n)
for(i in c(1)) {
print(x -((x^f[1])/(1+2+3)) + ((x^f[2])/(1+2+3+4+5))) - ((x^f[3])/(1+2+3+4+5+6+7))
}
f[2]
# Sine Approximation
n <- c(seq(from = 0, by = 1, to = 20))
f <- c(seq(from = 3, to = 100, by = 2))
x <- length(n)
for(i in c(1)) {
print(x -((x^f[1])/factorial(f[1])) + ((x^f[2])/factorial(f[2]))) - ((x^f[3])/factorial(f[3]) + ((x^f[4])/factorial(f[4])) - ((x^f[5])/factorial(f[5])) + ((x^f[6])/factorial(f[6])) - ((x^f[7])/factorial(f[7])) + ((x^f[8])/factorial(f[8])))
}
sin(n)
sin(x)
sin(21)
# Sine Approximation
n <- c(seq(from = 0, by = 1, to = 20))
f <- c(seq(from = 3, to = 100, by = 2))
x <- length(n)
for(i in c(x)) {
print(x -((x^f[1])/factorial(f[1])) + ((x^f[2])/factorial(f[2]))) - ((x^f[3])/factorial(f[3]) + ((x^f[4])/factorial(f[4])) - ((x^f[5])/factorial(f[5])) + ((x^f[6])/factorial(f[6])) - ((x^f[7])/factorial(f[7])) + ((x^f[8])/factorial(f[8])))
}
sin(n)
# Sine Approximation
n <- c(seq(from = 0, by = 1, to = 20))
f <- c(seq(from = 3, to = 100, by = 2))
x <- length(n)
for(i in c(x)) {
print(x -((x^f[1])/factorial(f[1])) + ((x^f[2])/factorial(f[2]))) - ((x^f[3])/factorial(f[3]) + ((x^f[4])/factorial(f[4])) - ((x^f[5])/factorial(f[5])) + ((x^f[6])/factorial(f[6])) - ((x^f[7])/factorial(f[7])) + ((x^f[8])/factorial(f[8])))
}
sin(x)
x - ((x^f[3])/factorial(f[3]) + ((x^f[4])/factorial(f[4])) - ((x^f[5])/factorial(f[5])) + ((x^f[6])/factorial(f[6])) - ((x^f[7])/factorial(f[7])) + ((x^f[8])/factorial(f[8])))
# Sine Approximation
n <- c(seq(from = 0, by = 1, to = 20))
f <- c(seq(from = 3, to = 100, by = 2))
x <- length(n)
for(i in c(1:20)) {
print(x[i] -((x[i]^f[i])/factorial(f[i])) + ((x[i]^f[i])/factorial(f[i])))
}
sin(x)
# Sine Approximation
n <- c(seq(from = 0, by = 1, to = 20))
f <- c(seq(from = 3, to = 100, by = 2))
x <- length(n)
for(i in n) {
print(x[i] -((x[i]^f[i])/factorial(f[i])) + ((x[i]^f[i])/factorial(f[i])))
}
sin(x)
# Sine Approximation
n <- c(seq(from = 0, by = 1, to = 20))
f <- c(seq(from = 3, to = 100, by = 2))
x <- length(n)
for(i in n[1:21]) {
print(x[i] -((x[i]^f[i])/factorial(f[i])) + ((x[i]^f[i])/factorial(f[i])))
}
sin(x)
# Sine Approximation
n <- c(seq(from = 0, by = 1, to = 20))
f <- c(seq(from = 3, to = 100, by = 2))
x <- length(n)
for(i in n[0:21]) {
print(x[i] -((x[i]^f[i])/factorial(f[i])) + ((x[i]^f[i])/factorial(f[i])))
}
sin(x)
B <- matrix(NA, nrow = 5, ncol = 4)
# for loop to get matrix B
for (i in 1:nrow(A)) {
for (j in 1:ncol(A)) {
B[i,j] <- A[i,j] + i
}
}
B
for (i in 1:nrow(B)) {
for (j in 1:ncol(B)) {
B[i,j] <- B[i,j] + i
}
}
B
for (i in 1:nrow(B)) {
for (j in 1:ncol(B)) {
B[i,j] <- B[i,j] + i
B <- matrix(NA, nrow = 5, ncol = 4)
B
print(B)
B
set.seed
set.seed(123)
val_rep <- 1902983098148 # Change this value!
repeat {
print(val_rep)
if (val_rep %% 2 == 1) { # If val_rep is odd,
break                  # end the loop.
}
val_rep <- val_rep / 2 # Divide val_rep by 2 since val_rep was even.
# When the end of the loop is reached, return to the beginning of the loop.
}
val_rep <- 190298 # Change this value!
repeat {
print(val_rep)
if (val_rep %% 2 == 1) { # If val_rep is odd,
break                  # end the loop.
}
val_rep <- val_rep / 2 # Divide val_rep by 2 since val_rep was even.
# When the end of the loop is reached, return to the beginning of the loop.
}
val_rep <- 190222 # Change this value!
repeat {
print(val_rep)
if (val_rep %% 2 == 1) { # If val_rep is odd,
break                  # end the loop.
}
val_rep <- val_rep / 2 # Divide val_rep by 2 since val_rep was even.
# When the end of the loop is reached, return to the beginning of the loop.
}
val_rep <- 1904 # Change this value!
repeat {
print(val_rep)
if (val_rep %% 2 == 1) { # If val_rep is odd,
break                  # end the loop.
}
val_rep <- val_rep / 2 # Divide val_rep by 2 since val_rep was even.
# When the end of the loop is reached, return to the beginning of the loop.
}
# Divide a number by 2 until it becomes odd.
val_while <- 1904 # Change this value!
while (val_while %% 2 == 0) { # Continue the loop as long as val_while is even.
print(val_while)
val_while <- val_while / 2
}
val_rep <- 1904 # Change this value!
repeat {
print(val_rep)
if (val_rep %% 2 == 1) { # If val_rep is odd,
break                  # end the loop.
}
val_rep <- val_rep / 2 # Divide val_rep by 2 since val_rep was even.
# When the end of the loop is reached, return to the beginning of the loop.
}
reduce <- function(x) {
while (val_while %% 2 == 0) { # Continue the loop as long as val_while is even.
val_while <- val_while / 2
}
reduce(1904)
reduce <- function(x) {
while (val_while %% 2 == 0) { # Continue the loop as long as val_while is even.
val_while <- val_while / 2}
reduce(1904)
# Divide a number by 2 until it becomes odd.
val_while <- 1904 # Change this value!
while (val_while %% 2 == 0) { # Continue the loop as long as val_while is even.
print(val_while)
val_while <- val_while / 2
}
reduce <- function(x) {
while (val_while %% 2 == 0) { # Continue the loop as long as val_while is even.
x / 2}
reduce(1904)
reduce <- function(x) {
while (val_while %% 2 == 0) # Continue the loop as long as val_while is even.
x / 2}
reduce(1904)
reduce <- function(x) {
while (val_while %% 2 == 0) # Continue the loop as long as val_while is even.
x / 2}
print(reduce(1904))
reduce <- function(x) {
while (x) %% 2 == 0) # Continue the loop as long as val_while is even.
reduce <- function(x) {
while (x %% 2 == 0) # Continue the loop as long as val_while is even.
x / 2}
print(reduce(1904))
reduce <- function(x) {
while (x %% 2 == 0) # Continue the loop as long as val_while is even.
x / 2}
print(reduce(1904))
reduce <- function(x) {
while (x == EVEN) # Continue the loop as long as val_while is even.
x / 2}
print(reduce(1904))
reduce <- function(x) {
while (x == even) # Continue the loop as long as val_while is even.
x / 2}
print(reduce(1904))
# For
vector3 <- c(1:100)
for (i in c(1:100)) {
print((1/100)*(sum(1:100)))
}
# While
vector3 <- c(1:100)
while (x > 0) {
print((1/100)*(sum(1:100)))
}
vector3 <- c(1:100)
for (i in c(1:100)) {
print((1/100)*(sum(1:100)))
if (vector3 %% 2 == 1) { # If val_rep is odd,
break                  # end the loop.
}
}
vector3 <- c(1:100)
for (vector3) {
print((1/100)*(sum(1:100)))
if (vector3 %% 2 == 1) { # If val_rep is odd,
break                  # end the loop.
}
}
# For
vector3 <- c(1:100)
## HELP for (vector3) {
##   print((1/100)*(sum(1:100)))
##  if (vector3 %% 2 == 1) { # If val_rep is odd,
##    break                  # end the loop.
##  }
##}
# While
vector3 <- c(1:100)
## HELP while (x > 0) {
##  print((1/100)*(sum(1:100)))
##}
# Repeat
vector3 <- c(1:100)
## HELP  repeat {
##  print(vector3)
##  if (vector3 %% 2 == 1) { # If val_rep is odd,
##    break                  # end the loop.
##
##  vector3 <- vector3 / 2 # Divide val_rep by 2 since val_rep was even.
# When the end of the loop is reached, return to the beginning of the loop.
##}
## reduce <- function(x) {
##   while (x %% 2 == 0) # Continue the loop as long as val_while is even.
##   x / 2
##   if (x %% 2 == 1) { # If val_rep is odd,
##     break                  # end the loop.
##   }
##   }
## print(reduce(1904))
rm(list)
rm()
rm(ls)
rm(environment)
rm(ls())
library(XML)
library(xml2)
library(rvest)
library(magrittr)
install.packages(xm12, rvest,)
install.packages(xm12)
install.packages("xm12")
install.packages("rvest")
# Packages
library(XML)
library(xml2)
library(rvest)
library(magrittr)
install.packages("xml2")
load(xml2)
load("xml2")
load("rvest")
# Assemble url (so it fits on screen)
basket <- "https://www.basketball-reference.com"
gsw <- "/teams/GSW/2017.html"
gsw_url <- paste0(basket, gsw)
# download HTML file to your working directory
download.file(gsw_url, 'gsw-roster-2017.html')
# Read GSW Roster html table
gsw_roster <- readHTMLTable('gsw-roster-2017.html')
head(gsw_roster)
# Assemble url (so it fits on screen)
basket <- "https://www.basketball-reference.com"
bos <- "/teams/BOS/2017.html"
bos_url <- paste0(basket, bos)
# download HTML file to your working directory
download.file(bos_url, 'bos-roster-2017.html')
# Read BOS Roster html table
bos_roster <- readHTMLTable('bos-roster-2017.html')
# Read contents of html file
nba_html <- paste0(basket, "/leagues/NBA_2017.html")
xml_doc <- read_html(nba_html)
# Read contents of html file
nba_html <- paste0(basket, "/leagues/NBA_2017.html")
xml_doc <- read_html(nba_html)
# Extract character vector
xml_text <- xml_doc %>% html_text()
# content of h2 nodes
xml_doc %>%
html_nodes("h2") %>%
html_text()
# Extract "h1"
xml_doc %>%
html_nodes("h1") %>%
html_text()
# Extract "strong"
xml_doc %>%
html_nodes("strong") %>%
html_text()
# Extract "button"
xml_doc %>%
html_nodes("button") %>%
html_text()
# Extract "h1"
xml_doc %>%
html_nodes("h1") %>%
html_text()
# Extract "h1"
xml_doc %>%
html_nodes("h1") %>%
html_text()
# Extract "strong"
xml_doc %>%
html_nodes("strong") %>%
html_text()
# Extract "button"
xml_doc %>%
html_nodes("button") %>%
html_text()
xml_doc %>%
html_nodes("p.listhead") %>%
html_text()
# Extracting nodes + attributes with XPath
xml_doc %>%
html_nodes(xpath = '//p[@class="listhead"]') %>%
html_text()
xml_doc %>%
html_nodes(xpath = '//ul[@class=""]/li/a') %>%
html_text()
# extracting first table
xml_table1 <- xml_doc %>%
html_nodes("table") %>%
extract(1)
class(xml_table1)
# extract the html table as a data frame
tbl1 <- html_table(xml_table1)
head(tbl1)
# two html tables
xml_tables <- xml_doc %>%
html_nodes("table") %>%
extract(1:2)
# two html tables
xml_tables <- xml_doc %>%
html_nodes("table") %>%
extract(1:2)
# two html tables
xml_tables <- xml_doc %>%
html_nodes("table") %>%
extract(1:2)
# extract names of teams
xml_tables %>%
html_nodes("a") %>%
html_text()
# href attributes
xml_tables %>%
html_nodes("a") %>%
html_attr("href")
hrefs <- xml_tables %>%
html_nodes("a") %>%
html_attr("href")
hrefs
slider <- input_slider(10, 1000)
library(dplyr)
library(ggplot2)
library(ggvis)
iris %>% ggvis(~Sepal.Length, ~Sepal.Width, stroke = ~Species) %>% layer_points()
slider <- input_slider(10, 1000)
iris %>% ggvis(~Sepal.Length, ~Sepal.Width, stroke = ~Species) %>%
layer_points(size := slider) %>%
layer_points(fill := "grey", opacity := 0.5, size := slider)
slider <- input_slider(10, 250)
iris %>% ggvis(~Sepal.Length, ~Sepal.Width, stroke = ~Species) %>%
layer_points(size := slider) %>%
layer_points(fill := "grey", opacity := 0.5, size := slider)
## ggplot2
ggplot(data=iris, aes(x = iris[1], color = "Species")
+ geom_point())
summary(iris)
## ggplot2
ggplot(iris, aes(x=Petal.Length)) + geom_histogram(binwidth=.25, fill="darkolivegreen4")
## ggplot2
ggplot(iris, aes(x=Petal.Length) +
geom="bar" +
## ggplot2
ggplot(iris, aes(x=Petal.Length)) + geom_histogram(binwidth=.25, fill="darkolivegreen4")
##ggvis
iris %>% ggvis(~Petal.Length) %>% layer_histograms(binwidth=.25, fill:="darkolivegreen4")
## ggplot2
ggplot(iris, aes(x=Petal.Length)) + geom_histogram(binwidth=.25, fill="darkolivegreen4")
##ggvis
iris %>% ggvis(~Petal.Length) %>% layer_histograms(width=.25, fill:="darkolivegreen4")
## ggplot2
ggplot(iris, aes(x=Petal.Length)) + geom_histogram(binwidth=.25, fill="lightpink")
##ggvis
iris %>% ggvis(~Petal.Length) %>% layer_histograms(width=.25, fill:="darkolivegreen4")
## ggplot2
ggplot(iris, aes(x=Petal.Length)) + geom_histogram(binwidth=.25, fill="lightpink")
##ggvis
iris %>% ggvis(~Petal.Length) %>% layer_histograms(width=.25, fill:="lightpink")
## ggplot2
ggplot(iris, aes(x=Petal.Length)) + geom_histogram(binwidth=.25, fill="darkslateblue")
##ggvis
iris %>% ggvis(~Petal.Length) %>% layer_histograms(width=.25, fill:="darkslateblue")
# Summary of iris dataset
summary(iris)
head(iris)
install.packages("ggvis")
# intsall latest version
devtools::install_github("hadley/lazyeval", build_vignettes = FALSE)
install.packages("ggvis")
# intsall latest version
devtools::install_github("hadley/lazyeval", build_vignettes = FALSE)
devtools::install_github("hadley/dplyr", build_vignettes = FALSE)
devtools::install_github("rstudio/ggvis", build_vignettes = FALSE)
library(ggvis)
library(dplyr)
library(ggplot2)
setwd("~/Stat 133/stat133-hws-fall17/post02")
install.packages("Rccp")
devtools::install_url("http://cran.r-project.org/src/contrib/rmarkdown0.5.1.tar.gz")
devtools::install_url("http://cran.r-project.org/src/contrib/rmarkdown_1.0.tar.gz")
library("rmarkdown", lib.loc="~/R/win-library/3.4")
install.packages("knitr")
install.packages("knitr")
install.packages("rmarkdown")
library(rmarkdown)
library(knitr)
library(rmarkdown)
install.packages(Rccp)
install.packages("Rccp")
